function r = eegsfile(action)

% File open and save routines for eegscore.m
%
% It is not intended for external use.

% Define the global values
eegsinclude;

r = 0;

switch action

case 'check',
	if changesMade > 0
		button = questdlg('Save changes?',...
			'Save Changes?','Yes','No','Cancel','Cancel');
		if strcmp(button,'Yes')
			eegsfile('save');
		elseif strcmp(button,'No')
			displog('User chose not to save changes.');
		else
			r = 1;
		end
	end

case 'create',
	ScreenSize = get(0, 'ScreenSize');
	fileFigure = figure('Color',deflColor, ...
		'Visible','off', ...
		'CloseRequestFcn', 'cbeegsfile(''cancel'')', ...
		'KeyPressFcn', 'cbeegsfile(''keypress'')', ...
		'Colormap',eegViewColorMap, ...
		'MenuBar', 'none', ...
		'Name', 'EEGSCORE Files', ...
		'NumberTitle', 'off', ...
		'Position',[50 100 (ScreenSize(3) - 100) 300], ...
		'Tag','FigF');
	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''DAT'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.05 0.85 0.3 0.1], ...
		'String', 'EEG Data .DAT File To Read From:');
	datUI = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'FontSize',0.4, ...
		'HorizontalAlignment','left', ...
		'BackgroundColor',deflColor, ...
		'Position',[0.4 0.85 0.55 0.1], ...
		'String',datFileName, ...
		'Style','text');

	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''CFG'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.05 0.7 0.3 0.1], ...
		'String', 'EEG Config _CFG File To Read From:');
	cfgUI = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'FontSize',0.4, ...
		'HorizontalAlignment','left', ...
		'BackgroundColor',deflColor, ...
		'Position',[0.4 0.7 0.55 0.1], ...
		'String',cfgFileName, ...
		'Style','text');

	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''INMASK'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.05 0.55 0.3 0.1], ...
		'String', 'EEG .MASK File To Read From:');
	maskInUI = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'FontSize',0.4, ...
		'HorizontalAlignment','left', ...
		'BackgroundColor',deflColor, ...
		'Position',[0.4 0.55 0.55 0.1], ...
		'String',maskInFileName, ...
		'Style','text');

	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''OUTMASK'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.05 0.4 0.3 0.1], ...
		'String', 'EEG .MASK File To Save To:');
	maskOutUI = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'FontSize',0.4, ...
		'HorizontalAlignment','left', ...
		'BackgroundColor',deflColor, ...
		'Position',[0.4 0.4 0.55 0.1], ...
		'String',maskOutFileName, ...
		'Style','text');

	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''load'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.05 0.2 0.25 0.1], ...
		'String', 'Load DAT, MASK, And CFG Files');

	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''save'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.375 0.2 0.25 0.1], ...
		'String', 'Save MASK File');

	b = uicontrol('Parent',fileFigure, ...
		'Units','normalized', ...
		'FontUnits','normalized', ...
		'Callback', 'cbeegsfile(''cancel'')', ...
		'Value', 1, ...
		'BackgroundColor',bgColor, ...
		'FontSize',0.4, ...
		'HorizontalAlignment','center', ...
		'Position',[0.7 0.2 0.25 0.1], ...
		'String', 'Close This Window');

case 'dialog',
	eegswork('off');
	eegsfile('update');
	set(fileFigure, 'Visible', 'on');
	figure(fileFigure);
	drawnow;
	uiwait;

case 'guess',
	if (strcmp(datFileName, 'NADA') == 1)
		b = pervertfile(maskInFileName, '.DAT');
		if (b ~= 0)
			datFileName = b;
		end
	end

	if (strcmp(maskInFileName, 'NADA') == 1)
		b = pervertfile(datFileName, '.MASK');
		if (b ~= 0)
			maskInFileName = b;
		end
	end

	if (strcmp(cfgFileName, 'NADA') == 1)
		b = pervertfile(datFileName, '_CFG.m');
		if (b ~= 0)
			cfgFileName = b;
		else
			b = pervertfile(maskInFileName, '_CFG.m');
			if (b ~= 0)
				cfgFileName = b;
			end
		end
	end

	if (strcmp(maskOutFileName, 'NADA') == 1)
		maskOutFileName = maskInFileName;
	end

case 'load',
	changedir(dirFromFile(cfgFileName));
	logHeader('eegscore', datFileName, maskInFileName, cfgFileName);
% remove previous plots if there are any and save config file
	if eegFigure > 0
		for plotNum = 1:totChans
			thisPlot = eegPlotList(plotNum);
			set(thisPlot, 'Visible','off', 'ButtonDownFcn', '');
			kids = get(thisPlot, 'Children');
			for kidNum = 1:size(kids,1)
				set(kids(kidNum), 'Visible','off', 'ButtonDownFcn', '');
			end
		end
		set(eegFigure,'Name',['EEG Data Viewer: ' datFileName]);
		if saveCFG == 1
			saveEEGSCORECFG;
		end
		set(undoButton, 'Visible','off');		
	end
	msg = ['Loading channel data from ' datFileName ' ...'];
	displog(msg);
	eval(['load ' datFileName ' allChannelData -mat']);
% set totChans to number of channels in allChannelData
	totChans = size(allChannelData,2);
	msg = ['Loading good/bad mask info from ' maskInFileName ' ...'];
	displog(msg);
	eval(['load ' maskInFileName ' allChannelMask -mat']);
	if (size(allChannelData,1) ~= size(allChannelMask,1))
		error('Error: DAT and MASK files are NOT the same length');
	end
	if (size(allChannelData,2) ~= size(allChannelMask,2))
		error('Error: DAT and MASK files do NOT the same number of channels');
	end
	allChannelMask = uint8(allChannelMask);	

	b = dropext(cfgFileName);
	b = fileFromPath(b);
	msg = ['Loading config info from ' b ' ...'];
	displog(msg);
	[rawVersion,timeStamp,EventCodes,Samp_Rate,NChan,gain,bits,range,...
		scale,NSamp,NEvent] = aload(b);
% now verify that totChans is either equal to NChan or NChan+NEvent
	if ~((totChans == NChan) | (totChans == (NChan+NEvent)))
		msg = 'totChans does not agree with NChan and NEvent';
		displog(msg);
	end
        timeLine = [0:NSamp-1];
        timeLine = timeLine/Samp_Rate;
	eegsinit;   % has to come after totChans etc are known
	allChannelData = int16(datScale .* allChannelData);  %put allChannelData into int16 to save memory
% if this >= second file loaded then must build plots and set channel slider
	if eegFigure > 0
		eegsBuildPlots;
		setChanSlider;
	end

case 'save',
	msg = ['Saving modified mask info to ' ...
		maskOutFileName ' ...'];
	displog(msg);
	allChannelMask = double(allChannelMask);
	eval(['save ' maskOutFileName ...
		' allChannelMask -mat']);

case 'update',
	eegsfile('guess');
	if (strcmp(datFileName, 'NADA') == 1)
		set(datUI, 'String', '*.DAT');
	else
		set(datUI, 'String', datFileName);
	end
	if (strcmp(cfgFileName, 'NADA') == 1)
		set(cfgUI, 'String', '*_CFG.m');
	else
		set(cfgUI, 'String', cfgFileName);
	end
	if (strcmp(maskInFileName, 'NADA') == 1)
		set(maskInUI, 'String', '*.MASK');
	else
		set(maskInUI, 'String', maskInFileName);
	end
	if (strcmp(maskOutFileName, 'NADA') == 1)
		if (strcmp(maskInFileName, 'NADA') == 1)
			set(maskOutUI, 'String', '*.MASK');
		else
			maskOutFileName = maskInFileName;
			set(maskOutUI, 'String', maskOutFileName);
		end
	else
		set(maskOutUI, 'String', maskOutFileName);
	end

otherwise,
	disp(action);

end
